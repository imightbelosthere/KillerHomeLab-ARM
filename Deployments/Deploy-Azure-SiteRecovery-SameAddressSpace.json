{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptiondeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Region1RG": {
            "type": "string",
            "defaultValue": "ASR-Site-01",
            "metadata": {
                "description": "Region 1 Resource Group"
            }
        },        
        "Region2": {
            "type": "string",
            "defaultValue": "USGovTexas", 
            "metadata": {
                "description": "Choose Region (Example: USGovTexas)"
            }
        },
        "Region2RG": {
            "type": "string",
            "defaultValue": "ASR-Site-02",
            "metadata": {
                "description": "Region 2 Resource Group"
            }
        },
        "DeploymentScriptRegion": {
            "type": "string",
            "defaultValue": "USGovVirginia", 
            "metadata": {
                "description": "Choose Region (Example: USGovVirginia)"
            }
        },                                                                                                            
        "TimeZone": {
            "type": "string",
            "defaultValue": "Eastern Standard Time",
            "allowedValues": [
                "Afghanistan Standard Time",
                "Alaskan Standard Time",
                "Aleutian Standard Time",
                "Altai Standard Time",
                "Arab Standard Time",
                "Arabian Standard Time",
                "Arabic Standard Time",
                "Argentina Standard Time",
                "Astrakhan Standard Time",
                "Atlantic Standard Time",
                "AUS Central Standard Time",
                "Aus Central W. Standard Time",
                "AUS Eastern Standard Time",
                "Azerbaijan Standard Time",
                "Azores Standard Time",
                "Bahia Standard Time",
                "Bangladesh Standard Time",
                "Belarus Standard Time",
                "Bougainville Standard Time",
                "Canada Central Standard Time",
                "Cape Verde Standard Time",
                "Caucasus Standard Time",
                "Cen. Australia Standard Time",
                "Central America Standard Time",
                "Central Asia Standard Time",
                "Central Brazilian Standard Time",
                "Central Europe Standard Time",
                "Central European Standard Time",
                "Central Pacific Standard Time",
                "Central Standard Time (Mexico)",
                "Central Standard Time",
                "Chatham Islands Standard Time",
                "China Standard Time",
                "Cuba Standard Time",
                "Dateline Standard Time",
                "E. Africa Standard Time",
                "E. Australia Standard Time",
                "E. Europe Standard Time",
                "E. South America Standard Time",
                "Easter Island Standard Time",
                "Eastern Standard Time (Mexico)",
                "Eastern Standard Time",
                "Egypt Standard Time",
                "Ekaterinburg Standard Time",
                "Fiji Standard Time",
                "FLE Standard Time",
                "Georgian Standard Time",
                "GMT Standard Time",
                "Greenland Standard Time",
                "Greenwich Standard Time",
                "GTB Standard Time",
                "Haiti Standard Time",
                "Hawaiian Standard Time",
                "India Standard Time",
                "Iran Standard Time",
                "Israel Standard Time",
                "Jordan Standard Time",
                "Kaliningrad Standard Time",
                "Korea Standard Time",
                "Libya Standard Time",
                "Line Islands Standard Time",
                "Lord Howe Standard Time",
                "Magadan Standard Time",
                "Magallanes Standard Time",
                "Marquesas Standard Time",
                "Mauritius Standard Time",
                "Middle East Standard Time",
                "Montevideo Standard Time",
                "Morocco Standard Time",
                "Mountain Standard Time (Mexico)",
                "Mountain Standard Time",
                "Myanmar Standard Time",
                "N. Central Asia Standard Time",
                "Namibia Standard Time",
                "Nepal Standard Time",
                "New Zealand Standard Time",
                "Newfoundland Standard Time",
                "Norfolk Standard Time",
                "North Asia East Standard Time",
                "North Asia Standard Time",
                "North Korea Standard Time",
                "Omsk Standard Time",
                "Pacific SA Standard Time",
                "Pacific Standard Time (Mexico)",
                "Pacific Standard Time",
                "Pakistan Standard Time",
                "Paraguay Standard Time",
                "Qyzylorda Standard Time",
                "Romance Standard Time",
                "Russia Time Zone 10",
                "Russia Time Zone 11",
                "Russia Time Zone 3",
                "Russian Standard Time",
                "SA Eastern Standard Time",
                "SA Pacific Standard Time",
                "SA Western Standard Time",
                "Saint Pierre Standard Time",
                "Sakhalin Standard Time",
                "Samoa Standard Time",
                "Sao Tome Standard Time",
                "Saratov Standard Time",
                "SE Asia Standard Time",
                "Singapore Standard Time",
                "South Africa Standard Time",
                "Sri Lanka Standard Time",
                "Sudan Standard Time",
                "Syria Standard Time",
                "Taipei Standard Time",
                "Tasmania Standard Time",
                "Tocantins Standard Time",
                "Tokyo Standard Time",
                "Tomsk Standard Time",
                "Tonga Standard Time",
                "Transbaikal Standard Time",
                "Turkey Standard Time",
                "Turks And Caicos Standard Time",
                "Ulaanbaatar Standard Time",
                "US Eastern Standard Time",
                "US Mountain Standard Time",
                "UTC",
                "UTC+12",
                "UTC+13",
                "UTC-02",
                "UTC-08",
                "UTC-09",
                "UTC-11",
                "Venezuela Standard Time",
                "Vladivostok Standard Time",
                "Volgograd Standard Time",
                "W. Australia Standard Time",
                "W. Central Africa Standard Time",
                "W. Europe Standard Time",
                "W. Mongolia Standard Time",
                "West Asia Standard Time",
                "West Bank Standard Time",
                "West Pacific Standard Time",
                "Yakutsk Standard Time"
            ],
            "metadata": {
                "description": "Time Zone"
            }
        },
        "AutoShutdownEnabled": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Enabled Auto Shutdown.  !!!If Enabled, AutoShutdownEmail MUST be added!!!!"
            }
        },
        "AutoShutdownTime": {
            "type": "string",
            "defaultValue": "2000",
            "metadata": {
                "description": "24-Hour Clock Time for Auto-Shutdown Example: 1900 = 7PM"
            }
        },
        "AutoShutdownEmail": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Auto-Shutdown notification Email Example:  user@domain.com"
            }
        },         
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Administrator of the new VM and Domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VM and Domain"
            }
        },
        "AzureUserObjectID": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Deployment Account Object ID"
            }
        },
        "WindowsServerLicenseType": {
            "type": "string",
            "defaultValue": "None",
            "allowedValues": [
                "None",
                "Windows_Server"
            ],
            "metadata": {
                "description": "Windows Server OS License Type"
            }
        },
        "NamingConvention": {
            "type": "string",
            "defaultValue": "khl",
            "maxLength": 4,
            "metadata": {
                "description": "VNet1 Name"
            }
        },
        "vnet1ID": {
            "type": "string",
            "defaultValue": "172.16",
            "metadata": {
                "description": "Region 1 VNet Prefix"
            }
        },
        "VMOSSku": {
            "type": "string",
            "defaultValue": "2022-Datacenter",
            "allowedValues": [
                "2022-Datacenter",
                "2019-Datacenter",
                "2016-Datacenter",
                "2012-R2-Datacenter"
            ],
            "metadata": {
                "description": "VM1 OS Sku"
            }
        },
        "VMOSVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "VM1 OS Version Number (Example:  2022-Datacenter=20348.707.220505, 2019-Datacenter=17763.3131.220505, 2016-Datacenter=14393.5125.220505, 2012-R2-Datacenter=9600.20371.220504)"
            }
        },
        "VM1Size": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Region1 VMSize"
            }
        },                                                                         
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/elliottfieldsjr/KillerHomeLab-ARM/comingsoon/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "DeploymentName": "[deployment().name]",
        "Identifier": "[substring(variables('DeploymentName'), 19, 14)]",
        "KeyVaultName": "[concat('ASRS-', variables('Identifier'))]",
        "SecretName": "[concat(variables('KeyVaultName'),'-Password')]",
        "DEDES1Name": "[concat(parameters('NamingConvention'),'-DEDES1')]",
        "DEDES2Name": "[concat(parameters('NamingConvention'),'-DEDES2')]",        
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "BackupObjectID": "262044b1-e2ce-469f-a196-69ab7ada62d3",        
        "vnet1Name": "[concat(parameters('NamingConvention'),'-VNet1')]",
        "vnet1NameR": "[concat(parameters('NamingConvention'),'-Recovery-VNet1')]",        
        "vnet1Prefix": "[concat(parameters('vnet1ID'),'.0.0/16')]",
        "vnet1subnet1Name": "[concat(parameters('NamingConvention'),'-VNet1-Subnet1')]",
        "vnet1subnet1NameR": "[concat(parameters('NamingConvention'),'-Recovery-VNet1-Subnet1')]",        
        "vnet1subnet1Prefix": "[concat(parameters('vnet1ID'),'.1.0/24')]",
        "vnet1subnet2Name": "[concat(parameters('NamingConvention'),'-VNet1-Subnet2')]",
        "vnet1subnet2NameR": "[concat(parameters('NamingConvention'),'-Recovery--VNet1-Subnet2')]",        
        "vnet1subnet2Prefix": "[concat(parameters('vnet1ID'),'.2.0/24')]",
        "vnet1GatewaysubnetPrefix": "[concat(parameters('vnet1ID'),'.0.0/24')]",
        "vnet1BastionsubnetPrefix": "[concat(parameters('vnet1ID'),'.253.0/24')]",
        "vnet1FirewallsubnetPrefix": "[concat(parameters('vnet1ID'),'.254.0/24')]",
        "vm1name": "[concat(parameters('NamingConvention'),'-vm-01')]",           
        "vm1IP": "[concat(parameters('vnet1ID'),'.1.',variables('vmlastoctet'))]",                    
        "VMlastoctet": "10",        
        "DeploymentAPIVersion": "2021-04-01",
        "DeploymentScriptAPIVersion": "2020-10-01",
        "DiskEncryptionSetAPIVersion": "2022-07-02",
        "KeyVaultAPIVersion": "2021-11-01-preview",
        "KeyVaultKeyAPIVersion": "2021-11-01-preview",        
        "KeyVaultSecretAPIVersion": "2021-11-01-preview",
        "NetworkInterfacesAPIVersion": "2021-08-01",
        "RecoveryServicesVaultAPIVersion": "2022-08-01",
        "ResourceGroupAPIVersion": "2021-04-01",
        "RoleAssignmentAPIVersion": "2022-04-01",
        "SchedulesAPIVersion": "2018-09-15",
        "UserAssignedMIAPIVersion": "2022-01-31-preview",
        "VirtualMachinesAPIVersion": "2022-03-01",
        "VirtualNetworkAPIVersion": "2020-11-01"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Create-ResourceGroup-01",
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/resourcegroup.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ResourceGroupAPIVersion": {
                        "value": "[variables('ResourceGroupAPIVersion')]"
                    },
                    "ResourceGroupName": {
                        "value": "[parameters('Region1RG')]"
                    }    
                }
            }
        },        
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Create-ResourceGroup-02",
            "location": "[parameters('Region2')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/resourcegroup.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ResourceGroupAPIVersion": {
                        "value": "[variables('ResourceGroupAPIVersion')]"
                    },
                    "ResourceGroupName": {
                        "value": "[parameters('Region2RG')]"
                    }            
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Create-UserAssigned-ManagedID",
            "resourceGroup":  "[parameters('Region1RG')]", 
            "dependsOn": [
                "Create-ResourceGroup-01",
                "Create-ResourceGroup-02"
            ],                                 
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/userassignedmanagedidentity.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "UserAssignedMIAPIVersion": {
                        "value": "[variables('UserAssignedMIAPIVersion')]"
                    },
                    "ManagedIDNameHash": {
                        "value": "ManagedID"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Assign-UserAssignedMI-for-Region1RG",
            "resourceGroup":  "[parameters('Region1RG')]",                            
            "dependsOn": [
                "Create-UserAssigned-ManagedID"
            ],        
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "RoleAssignmentAPIVersion": {
                        "value": "[variables('RoleAssignmentAPIVersion')]"
                    },                    
                    "PrincipalID": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentity.value]"
                    },
                    "RoleDefinitionID": {
                        "value": "[variables('Contributor')]"
                    },
                    "roleAssignmentHash": {
                        "value": "SiteRecovery1"
                    }                                        
                }
            }
        },                                 
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Assign-UserAssignedMI-for-Region2RG",
            "resourceGroup":  "[parameters('Region2RG')]",                            
            "dependsOn": [
                "Create-UserAssigned-ManagedID"
            ],        
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "RoleAssignmentAPIVersion": {
                        "value": "[variables('RoleAssignmentAPIVersion')]"
                    },                    
                    "PrincipalID": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentity.value]"
                    },
                    "RoleDefinitionID": {
                        "value": "[variables('Contributor')]"
                    },
                    "roleAssignmentHash": {
                        "value": "SiteRecovery2"
                    }                                        
                }
            }
        },                                                                         
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Password-KeyVault-with-Secret",
            "resourceGroup":  "[parameters('Region1RG')]",
            "dependsOn": [
                "Create-ResourceGroup-01"
            ],             
            "Properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/keyvaultwithsecret.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultAPIVersion": {
                        "value": "[variables('KeyVaultAPIVersion')]"
                    },
                    "KeyVaultSecretAPIVersion": {
                        "value": "[variables('KeyVaultSecretAPIVersion')]"
                    },
                    "KeyVaultName": {
                        "value": "[variables('KeyVaultName')]"
                    },
                    "SecretName": {
                        "value": "[variables('SecretName')]"
                    },
                    "SecretValue": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "AzureUserObjectID": {
                        "value": "[parameters('AzureUserObjectID')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site1-KeyVault",
            "resourceGroup":  "[parameters('Region1RG')]",
            "dependsOn": [
                "Create-ResourceGroup-01",
                "Create-UserAssigned-ManagedID"
            ],             
            "Properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/keyvaultforasr.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultAPIVersion": {
                        "value": "[variables('KeyVaultAPIVersion')]"
                    },
                    "AzureUserObjectID": {
                        "value": "[parameters('AzureUserObjectID')]"
                    },
                    "BackupObjectID": {
                        "value": "[variables('BackupObjectID')]"
                    },
                    "UserManagedObjectID": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentity.value]"
                    },                                        
                    "KeyVaultNameHash": {
                        "value": "KeyVault1"
                    }                      
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site2-KeyVault",
            "resourceGroup":  "[parameters('Region2RG')]",
            "dependsOn": [
                "Create-ResourceGroup-02",
                "Create-UserAssigned-ManagedID"
            ],             
            "Properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/keyvaultforasr.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultAPIVersion": {
                        "value": "[variables('KeyVaultAPIVersion')]"
                    },
                    "AzureUserObjectID": {
                        "value": "[parameters('AzureUserObjectID')]"
                    },
                    "BackupObjectID": {
                        "value": "[variables('BackupObjectID')]"
                    },
                    "UserManagedObjectID": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentity.value]"
                    },                                        
                    "KeyVaultNameHash": {
                        "value": "KeyVault2"
                    }                      
                }
            }
        },        
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site1-KeyVault-Key",
            "resourceGroup": "[parameters('Region1RG')]",    
            "dependsOn": [
                "Deploy-Site1-KeyVault"        
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/createkey.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultKeyAPIVersion": {
                        "value": "[variables('KeyVaultKeyAPIVersion')]"
                    },                    
                    "KeyVaultName": {
                        "value": "[reference('Deploy-Site1-KeyVault').outputs.KeyVaultName.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site2-KeyVault-Key",
            "resourceGroup": "[parameters('Region2RG')]",    
            "dependsOn": [
                "Deploy-Site2-KeyVault"        
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/createkey.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultKeyAPIVersion": {
                        "value": "[variables('KeyVaultKeyAPIVersion')]"
                    },                                        
                    "KeyVaultName": {
                        "value": "[reference('Deploy-Site2-KeyVault').outputs.KeyVaultName.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site1-DiskEncryptionSet",
            "resourceGroup": "[parameters('Region1RG')]",     
            "dependsOn": [
            "Deploy-Site1-KeyVault-Key"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/creatededes.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DiskEncryptionSetAPIVersion": {
                        "value": "[variables('DiskEncryptionSetAPIVersion')]"
                    },                                  
                    "KeyVaultKeyUrl": {
                        "value": "[reference('Deploy-Site1-KeyVault-Key').outputs.KeyVaultKeyUrl.value]"                           
                    },              
                    "DEDESName": {
                        "value": "[variables('DEDES1Name')]"
                    },
                    "KeyVaultName": {
                        "value": "[reference('Deploy-Site1-KeyVault').outputs.KeyVaultName.value]"
                    }                  
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site2-DiskEncryptionSet",
            "resourceGroup": "[parameters('Region2RG')]",     
            "dependsOn": [
            "Deploy-Site2-KeyVault-Key"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/creatededes.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DiskEncryptionSetAPIVersion": {
                        "value": "[variables('DiskEncryptionSetAPIVersion')]"
                    },                                  
                    "KeyVaultKeyUrl": {
                        "value": "[reference('Deploy-Site2-KeyVault-Key').outputs.KeyVaultKeyUrl.value]"                           
                    },              
                    "DEDESName": {
                        "value": "[variables('DEDES2Name')]"
                    },
                    "KeyVaultName": {
                        "value": "[reference('Deploy-Site2-KeyVault').outputs.KeyVaultName.value]"
                    }                   
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Get-DoubleEncrypted-DiskEncryptionSet1-PrincipalID",
            "resourceGroup": "[parameters('Region1RG')]",     
            "dependsOn": [
                "Deploy-Site1-DiskEncryptionSet"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/getdedespid.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DeploymentScriptAPIVersion": {
                        "value": "[variables('DeploymentScriptAPIVersion')]"
                    },     
                    "ManagedIDName": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentityname.value]"
                    },
                    "DEDESRG": {
                        "value": "[parameters('Region1RG')]"
                    },                                                        
                    "DEDESName": {
                        "value": "[variables('DEDES1Name')]"
                    },
                    "ScriptLocation": {
                        "value": "[parameters('DeploymentScriptRegion')]"
                    }              
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Get-DoubleEncrypted-DiskEncryptionSet2-PrincipalID",
            "resourceGroup": "[parameters('Region1RG')]",     
            "dependsOn": [
                "Deploy-Site2-DiskEncryptionSet"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/getdedespid.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DeploymentScriptAPIVersion": {
                        "value": "[variables('DeploymentScriptAPIVersion')]"
                    },     
                    "ManagedIDName": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentityname.value]"
                    },
                    "DEDESRG": {
                        "value": "[parameters('Region2RG')]"
                    },                                                        
                    "DEDESName": {
                        "value": "[variables('DEDES2Name')]"
                    },
                    "ScriptLocation": {
                        "value": "[parameters('DeploymentScriptRegion')]"
                    }              
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Update-Site1-KeyVault",
            "resourceGroup":  "[parameters('Region1RG')]",
            "dependsOn": [
                "Get-DoubleEncrypted-DiskEncryptionSet1-PrincipalID"
            ],             
            "Properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/updatekeyvaultforasr.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultAPIVersion": {
                        "value": "[variables('KeyVaultAPIVersion')]"
                    },
                    "AzureUserObjectID": {
                        "value": "[parameters('AzureUserObjectID')]"
                    },
                    "BackupObjectID": {
                        "value": "[variables('BackupObjectID')]"
                    },
                    "UserManagedObjectID": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentity.value]"
                    },                                        
                    "DESObjectID": {
                        "value": "[reference('Get-DoubleEncrypted-DiskEncryptionSet1-PrincipalID').outputs.DiskEncryptionSet.value]"
                    },                                                            
                    "KeyVaultName": {
                        "value": "[reference('Deploy-Site1-KeyVault').outputs.KeyVaultName.value]"
                    }                     
                }
            }
        },                                                                                            
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Update-Site2-KeyVault",
            "resourceGroup":  "[parameters('Region2RG')]",
            "dependsOn": [
                "Get-DoubleEncrypted-DiskEncryptionSet2-PrincipalID"
            ],             
            "Properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/updatekeyvaultforasr.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "KeyVaultAPIVersion": {
                        "value": "[variables('KeyVaultAPIVersion')]"
                    },
                    "AzureUserObjectID": {
                        "value": "[parameters('AzureUserObjectID')]"
                    },
                    "BackupObjectID": {
                        "value": "[variables('BackupObjectID')]"
                    },
                    "UserManagedObjectID": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentity.value]"
                    },                                        
                    "DESObjectID": {
                        "value": "[reference('Get-DoubleEncrypted-DiskEncryptionSet2-PrincipalID').outputs.DiskEncryptionSet.value]"
                    },                                                            
                    "KeyVaultName": {
                        "value": "[reference('Deploy-Site2-KeyVault').outputs.KeyVaultName.value]"
                    }                   
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",      
            "name": "Deploy-Site1-RecoveryServicesVault",
            "resourceGroup":   "[parameters('Region1RG')]",      
            "dependsOn": [
                "Update-Site1-KeyVault"        
            ],       
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/recoveryservicesvault.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "RecoveryServicesVaultAPIVersion": {
                        "value": "[variables('RecoveryServicesVaultAPIVersion')]"
                    },
                    "RecoveryServicesVaultNameHash": {
                        "value": "RecoveryServices1"
                    }                                          
                }
            }
        },                
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",      
            "name": "Deploy-Site2-RecoveryServicesVault",
            "resourceGroup":   "[parameters('Region2RG')]",      
            "dependsOn": [
                "Update-Site2-KeyVault"        
            ],       
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/recoveryservicesvault.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "RecoveryServicesVaultAPIVersion": {
                        "value": "[variables('RecoveryServicesVaultAPIVersion')]"
                    },
                    "RecoveryServicesVaultNameHash": {
                        "value": "RecoveryServices2"
                    }                                          
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-VirtualNetwork-01",
            "resourceGroup":   "[parameters('Region1RG')]",                  
            "dependsOn": [
                "Deploy-Site1-RecoveryServicesVault"        
            ],                   
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/vnet.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VirtualNetworkAPIVersion": {
                        "value": "[variables('VirtualNetworkAPIVersion')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnet1Name')]"
                    },
                    "vnetprefix": {
                        "value": "[variables('vnet1Prefix')]"
                    },
                    "subnet1Name": {
                        "value": "[variables('vnet1subnet1Name')]"
                    },
                    "subnet1Prefix": {
                        "value": "[variables('vnet1subnet1Prefix')]"
                    },
                    "subnet2Name": {
                        "value": "[variables('vnet1subnet2Name')]"
                    },
                    "subnet2Prefix": {
                        "value": "[variables('vnet1subnet2Prefix')]"
                    },
                    "GatewaysubnetPrefix": {
                        "value": "[variables('vnet1GatewaysubnetPrefix')]"
                    },
                    "BastionsubnetPrefix": {
                        "value": "[variables('vnet1BastionsubnetPrefix')]"
                    },
                    "FirewallsubnetPrefix": {
                        "value": "[variables('vnet1FirewallsubnetPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Recovery-VirtualNetwork-01",
            "resourceGroup":   "[parameters('Region2RG')]",                  
            "dependsOn": [
                "Deploy-Site1-RecoveryServicesVault"        
            ],                   
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/vnet.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VirtualNetworkAPIVersion": {
                        "value": "[variables('VirtualNetworkAPIVersion')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnet1NameR')]"
                    },
                    "vnetprefix": {
                        "value": "[variables('vnet1Prefix')]"
                    },
                    "subnet1Name": {
                        "value": "[variables('vnet1subnet1NameR')]"
                    },
                    "subnet1Prefix": {
                        "value": "[variables('vnet1subnet1Prefix')]"
                    },
                    "subnet2Name": {
                        "value": "[variables('vnet1subnet2NameR')]"
                    },
                    "subnet2Prefix": {
                        "value": "[variables('vnet1subnet2Prefix')]"
                    },
                    "GatewaysubnetPrefix": {
                        "value": "[variables('vnet1GatewaysubnetPrefix')]"
                    },
                    "BastionsubnetPrefix": {
                        "value": "[variables('vnet1BastionsubnetPrefix')]"
                    },
                    "FirewallsubnetPrefix": {
                        "value": "[variables('vnet1FirewallsubnetPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Deploy-Site1-VirtualMachine",
            "resourceGroup":   "[parameters('Region1RG')]",                              
            "dependsOn": [
                "Deploy-Recovery-VirtualNetwork-01"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "NetworkInterfacesAPIVersion": {
                        "value": "[variables('NetworkInterfacesAPIVersion')]"
                    },
                    "VirtualMachinesAPIVersion": {
                        "value": "[variables('VirtualMachinesAPIVersion')]"
                    },
                    "SchedulesAPIVersion": {
                        "value": "[variables('SchedulesAPIVersion')]"
                    },
                    "computerName": {
                        "value": "[variables('vm1name')]"
                    },
                    "computerIP": {
                        "value": "[variables('vm1IP')]"
                    },
                    "Publisher": {
                        "value": "MicrosoftWindowsServer"
                    },
                    "Offer": {
                        "value": "WindowsServer"
                    },
                    "OSSku": {
                        "value": "[parameters('VMOSSku')]"
                    },
                    "OSVersion": {
                        "value": "[parameters('VMOSVersion')]"
                    },
                    "LicenseType": {
                        "value": "[parameters('WindowsServerLicenseType')]"
                    },
                    "VMSize": {
                        "value": "[parameters('VM1Size')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnet1Name')]"
                    },
                    "subnet1Name": {
                        "value": "[variables('vnet1subnet1Name')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "TimeZone": {
                        "value": "[parameters('TimeZone')]"
                    },
                    "AutoShutdownEnabled": {
                        "value": "[parameters('AutoShutdownEnabled')]"
                    },
                    "AutoShutdownTime": {
                        "value": "[parameters('AutoShutdownTime')]"
                    },
                    "AutoShutdownEmail": {
                        "value": "[parameters('AutoShutdownEmail')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Encrypt-VirtualMachine",
            "resourceGroup": "[parameters('Region1RG')]",     
            "dependsOn": [
                "Deploy-Site1-VirtualMachine"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/encryptvm.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DeploymentScriptAPIVersion": {
                        "value": "[variables('DeploymentScriptAPIVersion')]"
                    },     
                    "ManagedIDName": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentityname.value]"
                    },                                                       
                    "DEDESName": {
                        "value": "[variables('DEDES1Name')]"
                    },
                    "ScriptLocation": {
                        "value": "[parameters('DeploymentScriptRegion')]"
                    },
                    "VMName": {
                        "value": "[variables('vm1name')]"
                    }                                 
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Backup-VirtualMachine",
            "resourceGroup": "[parameters('Region1RG')]",     
            "dependsOn": [
                "Encrypt-VirtualMachine"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/backupvm.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DeploymentScriptAPIVersion": {
                        "value": "[variables('DeploymentScriptAPIVersion')]"
                    },     
                    "ManagedIDName": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentityname.value]"
                    }, 
                    "RecoveryServicesVaultName": {
                        "value": "[reference('Deploy-Site1-RecoveryServicesVault').outputs.RecoveryServicesVaultName.value]"
                    },                                                             
                    "BackupPolicyName": {
                        "value": "[concat(parameters('NamingConvention'),'-Site1-BackupPolicy')]"
                    },                                               
                    "ScriptLocation": {
                        "value": "[parameters('DeploymentScriptRegion')]"
                    },
                    "VMName": {
                        "value": "[variables('vm1name')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },                    
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    }                              
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('DeploymentAPIVersion')]",
            "name": "Enable-ASR-for-VirtualMachine",
            "resourceGroup": "[parameters('Region1RG')]",
            "dependsOn": [
                "Encrypt-VirtualMachine"
            ],      
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/enableasr.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DeploymentScriptAPIVersion": {
                        "value": "[variables('DeploymentScriptAPIVersion')]"
                    },     
                    "ManagedIDName": {
                        "value": "[reference('Create-UserAssigned-ManagedID').outputs.manageduseridentityname.value]"
                    }, 
                    "RecoveryServicesVaultName": {
                        "value": "[reference('Deploy-Site2-RecoveryServicesVault').outputs.RecoveryServicesVaultName.value]"
                    },                        
                    "DEDESName": {
                        "value": "[variables('DEDES2Name')]"
                    },                                       
                    "Site1Name": {
                        "value": "site1"
                    },              
                    "Site2Name": {
                        "value": "site2"
                    },              
                    "TargetVNetName": {
                        "value": "[variables('vnet1NameR')]"             
                    },
                    "TargetRG": {
                        "value":  "[parameters('Region2RG')]"
                    },                  
                    "TargetLocation": {
                        "value": "[parameters('Region2')]"
                    },                                                    
                    "VMName": {
                        "value": "[variables('vm1name')]"
                    },              
                    "ScriptLocation": {
                        "value": "[parameters('DeploymentScriptRegion')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },                                                                                                            
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    }                                                                  
                }
            }
        }                                                                                                                                                                                                
    ]
}